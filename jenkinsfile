pipeline {
    agent any
    tools {
        jdk 'jdk17'
        nodejs 'node16'
    }
    environment {
        SCANNER_HOME = tool 'sonar-scanner'
        SONARQUBE_URL = "http://34.229.71.46:9000"
        SONARQUBE_LOGIN = "squ_58c7a47067b33bd5cda924a3f8baccccc1c976b2"
        SONARQUBE_PROJECT_KEY = "reddit"
        SONARQUBE_PROJECT_NAME = "reddit"
        DOCKER_USER = 'osanyap'
        APP_NAME = "reddit-clone-pipeline"
        RELEASE = "1.0.0"
        DOCKER_IMAGE_TAG = "${RELEASE}-${BUILD_NUMBER}"
        DOCKER_APP_NAME = "${DOCKER_USER}/${APP_NAME}"
    }
    stages {
        stage('SonarQube Analysis') {
            steps {
                script {
                    sh """$SCANNER_HOME/bin/sonar-scanner \
                        -Dsonar.projectKey=${SONARQUBE_PROJECT_KEY} \
                        -Dsonar.projectName=${SONARQUBE_PROJECT_NAME} \
                        -Dsonar.host.url=${SONARQUBE_URL} \
                        -Dsonar.login=${SONARQUBE_LOGIN} \
                        -Dsonar.java.binaries"""
                }
            }
        }
        /*stage('Quality Gate') {
            steps {
                script {
                    waitForQualityGate abortPipeline: false, credentialsId: 'SonarQube-Token'
                }
            }
        }
          */
        stage('Install Dependencies') {
            steps {
                sh "npm install"
            }
        }
        stage('TRIVY FS SCAN') {
            steps {
                sh "trivy fs . > trivyfs.txt"
            }
        }
        stage('Build & Push Docker Image') {
            steps {
                sh "docker build -t ${DOCKER_APP_NAME}:${DOCKER_IMAGE_TAG} ."
                sh "docker push ${DOCKER_APP_NAME}:${DOCKER_IMAGE_TAG}"
                sh "docker tag ${DOCKER_APP_NAME}:${DOCKER_IMAGE_TAG} ${DOCKER_APP_NAME}:latest"
                sh "docker push ${DOCKER_APP_NAME}:latest"
            }
        }
        stage('Trivy Image Scan') {
            steps {
                sh 'docker run -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy image ${DOCKER_APP_NAME}:${DOCKER_IMAGE_TAG} --no-progress --scanners vuln --exit-code 0 --severity HIGH,CRITICAL --format table > trivyimage.txt'
            }
        }
        stage('Cleanup Artifacts') {
            steps {
                script {
                    sh "docker rmi ${DOCKER_APP_NAME}:${DOCKER_IMAGE_TAG}"
                    sh "docker rmi ${DOCKER_APP_NAME}:latest"
                }
            }
        }
        stage("Trigger CD Pipeline") {
            steps {
                script {
                    sh "curl -v -k --user clouduser:${JENKINS_API_TOKEN} -X POST -H 'cache-control: no-cache' -H 'content-type: application/x-www-form-urlencoded' --data 'IMAGE_TAG=${DOCKER_IMAGE_TAG}' 'ec2-65-2-187-142.ap-south-1.compute.amazonaws.com:8080/job/Reddit-Clone-CD/buildWithParameters?token=gitops-token'"
                }
            }
         }
     }
     post {
        always {
           emailext attachLog: true,
               subject: "'${currentBuild.result}'",
               body: "Project: ${env.JOB_NAME}<br/>" +
                   "Build Number: ${env.BUILD_NUMBER}<br/>" +
                   "URL: ${env.BUILD_URL}<br/>",
               to: 'ashfaque.s510@gmail.com',                              
               attachmentsPattern: 'trivyfs.txt,trivyimage.txt'
        }
     }
}
