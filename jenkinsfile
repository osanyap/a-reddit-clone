pipeline {
    agent any
    tools {
        jdk 'jdk17'
        nodejs 'node16'
    }
    environment {
        SCANNER_HOME = tool 'sonar-scanner'
        SONARQUBE_URL = "http://34.229.71.46:9000"
        SONARQUBE_LOGIN = "squ_58c7a47067b33bd5cda924a3f8baccccc1c976b2"
        SONARQUBE_PROJECT_KEY = "reddit"
        SONARQUBE_PROJECT_NAME = "reddit"
        DOCKER_USER = 'osanyap'
        APP_NAME = "reddit-clone-pipeline"
        RELEASE = "1.0.0"
        DOCKER_IMAGE_TAG = "${RELEASE}-${BUILD_NUMBER}"
        DOCKER_APP_NAME = "${DOCKER_USER}/${APP_NAME}"
    }
    stages {
        stage('SonarQube Analysis') {
            steps {
                script {
                    // Wrap SonarQube analysis with withSonarQubeEnv
                    withSonarQubeEnv('SonarQube-Server') {
                        sh """$SCANNER_HOME/bin/sonar-scanner \
                            -Dsonar.projectKey=${SONARQUBE_PROJECT_KEY} \
                            -Dsonar.projectName=${SONARQUBE_PROJECT_NAME} \
                            -Dsonar.host.url=${SONARQUBE_URL} \
                            -Dsonar.login=${SONARQUBE_LOGIN} \
                            -Dsonar.java.binaries"""
                    }
                }
            }
        }
        stage('Quality Gate') {
            steps {
                script {
                    waitForQualityGate abortPipeline: false, credentialsId: 'SonarQube-Token'
                }
            }
        }
        // Add other stages here
    }
    post {
        always {
           emailext attachLog: true,
               subject: "'${currentBuild.result}'",
               body: "Project: ${env.JOB_NAME}<br/>" +
                   "Build Number: ${env.BUILD_NUMBER}<br/>" +
                   "URL: ${env.BUILD_URL}<br/>",
               to: 'ashfaque.s510@gmail.com',                              
               attachmentsPattern: 'trivyfs.txt,trivyimage.txt'
        }
    }
}
